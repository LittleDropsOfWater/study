(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{175:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"git操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git操作","aria-hidden":"true"}},[t._v("#")]),t._v(" git操作")]),t._v(" "),s("p",[t._v("git是工作的基础,不会git就无法提交工作")]),t._v(" "),s("h2",{attrs:{id:"git是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git是什么","aria-hidden":"true"}},[t._v("#")]),t._v(" git是什么")]),t._v(" "),s("p",[t._v("git是一个开源的分布式版本控制系统,快速,高效地处理从小型到大型项目的所有事物管理.\n结束了手动管理多个’版本’的史前时代")]),t._v(" "),s("p",[t._v("全局配置用户信息:\ngit config --global user.name xxx(用户名)\ngit config --global user.email xxx(邮箱地址)\ngit config --l 查看全局的配置")]),t._v(" "),s("p",[t._v("git和svn的区别\ngit 分布式\nsvn 集中式")]),t._v(" "),s("p",[t._v("冗余 意味着 安全")]),t._v(" "),s("p",[t._v("分支管理 实现多人协作"),s("br"),t._v("\n可离线操作")]),t._v(" "),s("p",[t._v("工作区(本地仓库) 文件夹   add\n进入暂存区 整合文件夹  commit"),s("br"),t._v("\n版本库(仓库)\tmaster是默认分支名")]),t._v(" "),s("p",[t._v("git init  创建本地版本库\ngit status 查看文件状态")]),t._v(" "),s("p",[t._v("git add .  工作区所有文件提交到暂存区\ngit commit -m ”描述”  提交到仓库 并附带描述")]),t._v(" "),s("p",[t._v("git diff  查看工作区文件的具体修改\ngit diff --cached  查看暂存区具体修改\ngit checkout 路径    恢复文件/文件夹\ngit checkout .\t\t恢复所有文件")]),t._v(" "),s("p",[t._v("第一种情况：撤销工作区的修改")]),t._v(" "),s("h1",{attrs:{id:"git-checkout-文件路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-文件路径","aria-hidden":"true"}},[t._v("#")]),t._v(" git checkout 文件路径")]),t._v(" "),s("p",[t._v("第二种情况：撤销暂存区的修改")]),t._v(" "),s("h1",{attrs:{id:"_1-git-reset-文件路径-（把暂存区的修改撤回工作区）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-reset-文件路径-（把暂存区的修改撤回工作区）","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. git reset 文件路径 （把暂存区的修改撤回工作区）")]),t._v(" "),s("h1",{attrs:{id:"_2-git-checkout-文件路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-git-checkout-文件路径","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. git checkout 文件路径")]),t._v(" "),s("p",[t._v("第三种情况：\t版本回退")]),t._v(" "),s("h1",{attrs:{id:"git-reset-hard-head-回退到上个版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-hard-head-回退到上个版本","aria-hidden":"true"}},[t._v("#")]),t._v(" git reset --hard HEAD^ //回退到上个版本")]),t._v(" "),s("h1",{attrs:{id:"git-reset-hard-head-上上个版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-hard-head-上上个版本","aria-hidden":"true"}},[t._v("#")]),t._v(" git reset --hard HEAD^^ //上上个版本")]),t._v(" "),s("p",[t._v("HEAD~n //回退到n个版本上")]),t._v(" "),s("p",[t._v("回退到指定版本（回到现在过去）")]),t._v(" "),s("p",[t._v("git reset --hard commit_id(e66aa88...)\n回退到指定版本（回到现在过去）")]),t._v(" "),s("p",[t._v("git reset --hard commit_id(e66aa88...)")]),t._v(" "),s("p",[t._v("如何获取所有版本的commit_id呢？\n针对这个需求，需要分两种情况：")]),t._v(" "),s("ul",[s("li",[t._v("第一，git bash窗口没有关闭，使用前面查过的commit_id")]),t._v(" "),s("li",[t._v("第二，git bash窗口关闭。比如，昨天做的操作，今天后悔了。 使用 git reflog")])]),t._v(" "),s("p",[t._v("存在文件差异不允许推送\n存在差异,需要先将远程仓库克隆到本地")]),t._v(" "),s("p",[t._v("克隆完 是一个文件夹 名字是仓库名\ngit clone git@github.com:xu315895238/lianxi.git   连接远程仓库")]),t._v(" "),s("p",[t._v("推送有两种方法  https协议 ssh协议\nSSH:\t\tgit@github.com:LittleDropsOfWater/1612bb.git\nHTTPS:\thttps://github.com/LittleDropsOfWater/1612bb.git\nhttps协议提交代码时需要输入用户名跟密码\nssh协议不需要\n设置ssh密钥   包含(创建密钥,上传密钥)\nhttps://blog.csdn.net/heimu24/article/details/81171422")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// $ ssh-keygen -t rsa -C "651027540@qq.com"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Generating public/private rsa key pair.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enter file in which to save the key (/c/Users/OR/.ssh/id_rsa):")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Created directory '/c/Users/OR/.ssh'.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enter passphrase (empty for no passphrase):")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enter same passphrase again:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Your identification has been saved in /c/Users/OR/.ssh/id_rsa.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Your public key has been saved in /c/Users/OR/.ssh/id_rsa.pub.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The key fingerprint is:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SHA256:Cb6hKr4ESr8FpGDrsSAHXBtfMQZ8F5H2WK9asvuqVnw 651027540@qq.com")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The key's randomart image is:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +---[RSA 2048]----+")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// |   o...=.o+      |")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// |. . +.o..+ .     |")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// |oo o .o o + .    |")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// |o.+  . . o . .   |")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// |+=..  o S   .    |")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// |B.+ .. o + E     |")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// |.+ .... . *      |")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// |o  .o  . o       |")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// |.+o.  ...o+.     |")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +----[SHA256]-----+")]),t._v("\n")])])]),s("p",[t._v("master 用户可见\ndev 测试团队\n分支相关：\ngit branch -a  同时查看本地和远程分支\ngit branch -r 　查看远程分支\ngit checkout -b 分支名  创建并切换到新分支\ngit push origin -d 分支名  删除远程分支\t\n分支之间只能用git merge合并")]),t._v(" "),s("p",[t._v("流程整合：本地项目推送远程仓库\ngit init\t\t初始化本地仓库\ngit add .\t\t工作区提交暂存区\ngit commit -m "),s("code",[t._v("描述")]),t._v("\t提交仓库\ngit remote add origin  "),s("code",[t._v("远程仓库地址")]),t._v("  关联远程仓库\ngit remote -v   查看关联的远程仓库\ngit push origin master 推送到远程仓库")]),t._v(" "),s("p",[t._v("流程整合: 从远程仓库创建分支\n连接远程仓库\ngit clone git@github.com:xu315895238/lianxi.git\n创建属于自己的分支\ngit checkout -b 'ywc'\n上传分支\ngit push -u origin ywc\n使用-u方式上传后  git push 默认上传到该分支")]),t._v(" "),s("p",[t._v("代码冲突时,需要手动解决,口头交流")]),t._v(" "),s("p",[t._v("提交文件的保险流程\n提交远程之前，必须把当前的文件提交干净。\ngit status\n(若提示有文件修改,git add .)\ngit commit -m ‘描述’\ngit pull origin 当前分支名\ngit push origin 当前分支名")]),t._v(" "),s("p",[t._v("切换分支的保险流程\n切换分支之前，必须将当前分支文件提交干净。\n合并分支的流程\n切换到要合并的分支， 把被合并的分支合并；\ngit checkout  要合并的分支\ngit merge 被合并的分支\ngit pull origin 要合并的分支\ngit push origin 要合并的分支")]),t._v(" "),s("p",[t._v("第一步：\n至少需要4个分支\nmaster\ndev\nywc\ntxb\n每个人把代码往自己分支提交\n代码差不多了往dev合并\ndev测试完毕往master合"),s("br"),t._v("\n确保master一定不要出问题")])])}],!1,null,null,null);e.default=a.exports}}]);